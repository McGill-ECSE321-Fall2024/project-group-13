plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'group_13'
version = '0.0.1-SNAPSHOT'
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}
repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// API docs
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.13.0'
	implementation 'com.github.therapi:therapi-runtime-javadoc:0.13.0'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		exceptionFormat "full"
		events "passed", "failed"
 	}
	finalizedBy jacocoTestReport

}

// Define the integrationTest task using tasks.register
tasks.register('integrationTest', Test) {
    description = 'Runs the integration tests.'
    group = 'verification'

    // Filter to include only tests in the integration package
    filter {
        includeTestsMatching 'group_13.game_store.integration.*'
    }

    // Use the same classpath and test classes as the main test task
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath

    // Ensure integration tests run after unit tests
    shouldRunAfter test

    // Use JUnit Platform (suitable for JUnit 5)
    useJUnitPlatform()

    // Configure test logging
    testLogging {
        exceptionFormat = 'full'
        events 'passed', 'failed', 'skipped'
    }
}

// Make the check task depend on integrationTest
tasks.named('check') {
    dependsOn tasks.named('integrationTest')
}

tasks.named('jacocoTestReport') {
    dependsOn test // tests are required to run before generating the report
}